i=i+1
evalTab = read.table(paste(inDir,selTabs[i],sep='/'), header = TRUE, sep = "\t",stringsAsFactors = TRUE,comment.char="",fill=TRUE)
tRow = which(evalTab$Eval==1)
fRow = which(evalTab$Eval==0)
evalTab = evalTab[c(tRow,fRow),]
if (i==1){
bigTab = evalTab
} else {
bigTab = rbind(bigTab,evalTab)
}
i=i+1
evalTab = read.table(paste(inDir,selTabs[i],sep='/'), header = TRUE, sep = "\t",stringsAsFactors = TRUE,comment.char="",fill=TRUE)
tRow = which(evalTab$Eval==1)
fRow = which(evalTab$Eval==0)
evalTab = evalTab[c(tRow,fRow),]
if (i==1){
bigTab = evalTab
} else {
bigTab = rbind(bigTab,evalTab)
}
i=i+1
evalTab = read.table(paste(inDir,selTabs[i],sep='/'), header = TRUE, sep = "\t",stringsAsFactors = TRUE,comment.char="",fill=TRUE)
tRow = which(evalTab$Eval==1)
fRow = which(evalTab$Eval==0)
evalTab = evalTab[c(tRow,fRow),]
if (i==1){
bigTab = evalTab
} else {
bigTab = rbind(bigTab,evalTab)
}
i=i+1
evalTab = read.table(paste(inDir,selTabs[i],sep='/'), header = TRUE, sep = "\t",stringsAsFactors = TRUE,comment.char="",fill=TRUE)
tRow = which(evalTab$Eval==1)
fRow = which(evalTab$Eval==0)
evalTab = evalTab[c(tRow,fRow),]
if (i==1){
bigTab = evalTab
} else {
bigTab = rbind(bigTab,evalTab)
}
i=i+1
evalTab = read.table(paste(inDir,selTabs[i],sep='/'), header = TRUE, sep = "\t",stringsAsFactors = TRUE,comment.char="",fill=TRUE)
tRow = which(evalTab$Eval==1)
fRow = which(evalTab$Eval==0)
evalTab = evalTab[c(tRow,fRow),]
if (i==1){
bigTab = evalTab
} else {
bigTab = rbind(bigTab,evalTab)
}
i=i+1
bigTab$Eval = droplevels(bigTab$Eval)
bigTab$Eval = as.numeric(bigTab$Eval)
bigTab$Eval = bigTab$Eval - 1
bigTab$LogitScore = log(bigTab$Score/(1-bigTab$Score))
bigTab$Label = as.character(bigTab$Label)
species = unique(bigTab$Label)
for (i in 1:length(species)){
thisSpec = str_which(bigTab$Label,species[i])
mod = glm(Eval~Score,data=bigTab[thisSpec,],family="binomial")
thresh = inv.logit((log(pTP/(1-pTP)))-mod$coefficients[1]/mod$coefficients[2])
print(ggplot(bigTab[thisSpec,], aes(x=Score, y=Eval)) + geom_point() +
stat_smooth(method="glm", color="green",
method.args = list(family=binomial))+
geom_vline(xintercept=thresh,color="red",size=1)+
labs(title=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep="")))
}
source("~/GitHub/HudsonProject/classifierConfScore_logReg.R")
predData$Conf = seq(0,1,0.001)
predData$Preds = predict(mod,predData$Conf,type='r')
predData = data.frame(Conf=seq(0,1,0.001))
predData$Preds = predict(mod,predData$Conf,type='r')
predConf = data.frame(Conf=seq(0,1,0.001))
Preds = predict(mod,predConf,type='r')
predData = data.frame(Score=seq(0,1,0.001))
predData$Preds = predict(mod,predData$Score,type='r')
predData$Preds = predict(mod,predData,type='r')
thresh = (log(pTP/(1-pTP)))-mod$coefficients[1]/mod$coefficients[2]
plot(Eval~Score,bigTab,
main=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep=""),
ylab='pr(BirdNET prediction is correct)',xlab='Confidence Score',
xlim=range(predData$Conf),pch=16,cex=1.5,col=rgb(0,0,0,.2))
plot(Eval~Score,bigTab,
main=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep=""),
ylab='pr(BirdNET prediction is correct)',xlab='Confidence Score',
xlim=range(predData$Score),pch=16,cex=1.5,col=rgb(0,0,0,.2))
lines(predData$Preds~PredData$Score,lwd=2,col=rgb(0,0.75,1,0.5))
lines(predData$Preds~predData$Score,lwd=2,col=rgb(0,0.75,1,0.5))
abline(v=thresh,col='red,led=2')
abline(v=thresh,col='red',lwd=2)
thresh = inv.logit((log(pTP/(1-pTP)))-mod$coefficients[1]/mod$coefficients[2])
abline(v=thresh,col='red',lwd=2)
print(ggplot(bigTab[thisSpec,], aes(x=Score, y=Eval)) + geom_point() +
stat_smooth(method="glm", color="green",
method.args = list(family=binomial))+
geom_vline(xintercept=thresh,color="red",size=1)+
labs(title=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep="")))
print(ggplot(bigTab[thisSpec,], aes(x=Score, y=Eval)) + geom_point() +
stat_smooth(method="glm", color="green",se=FALSE
method.args = list(family=binomial))+
print(ggplot(bigTab[thisSpec,], aes(x=Score, y=Eval)) + geom_point() +
stat_smooth(method="glm", color="green",se=FALSE,
method.args = list(family=binomial))+
geom_vline(xintercept=thresh,color="red",size=1)+
labs(title=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep="")))
print(ggplot(bigTab[thisSpec,], aes(x=Score, y=Eval)) + geom_point() +
stat_smooth(method="glm", color="blue",se=FALSE,
method.args = list(family=binomial))+
geom_vline(xintercept=thresh,color="red",size=1)+
labs(title=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep="")))
plot(Eval~Score,bigTab,
main=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep=""),
ylab='pr(BirdNET prediction is correct)',xlab='Confidence Score',
xlim=range(predData$Score),pch=16,cex=1.5,col=rgb(0,0,0,.2))
lines(predData$Preds~predData$Score,lwd=2,col=rgb(0,0.75,1,0.5))
abline(v=thresh,col='red',lwd=2)
print(ggplot(bigTab[thisSpec,], aes(x=Score, y=Eval)) + geom_point() +
stat_smooth(method="glm", color="blue",se=FALSE,
method.args = list(family=binomial))+
geom_vline(xintercept=thresh,color="red",size=1)+
labs(title=paste(species[i],', N Eval = ',length(thisSpec),', 90% TP Score Threshold = ',round(thresh,2),sep="")))
source("~/GitHub/HudsonProject/wrangleDOdata.R")
dateRange = c(as_datetime('2023/07/08'),as_datetime('2023/07/25'))
# Water Chestnut sensor
inDir = 'W:/projects/2022_NOAA-NERRS_HudsonNY_144488/ChestnutSAVSoundscapes/Dissolved_Oxygen/DO.Temp.2023.waterchestnut'
fileList = dir(inDir,pattern='*.txt')
for (i in 1:length(fileList)){
DO = read.table(paste(inDir,fileList[i],sep="/"),
skip=2,header=TRUE,fill=TRUE,sep=',',check.names=FALSE)
DO[,'Time (sec)'] = as_datetime(DO[,'Time (sec)'])
if (i==1){
trapaData = DO
} else {
trapaData = rbind(trapaData,DO)
}
}
colnames(trapaData) = c('Datetime','BatteryVolts','Temp','DO_mgl','Q')
inFile = "W:/projects/2022_NOAA-NERRS_HudsonNY_144488/ChestnutSAVSoundscapes/Dissolved_Oxygen/DO.Temp.SAV River location/226037.csv"
SAVdata = read.table(inFile,header=TRUE,fill=TRUE,sep=',',check.names=FALSE)
SAVdata$DateTimeStamp = parse_date_time(SAVdata$DateTimeStamp,'mdy HM')
NPdata = str_which(SAVdata$StationCode,'hudnpwq')
SAVdata = SAVdata[NPdata,]
plotDF = data.frame(trapaData$Datetime,trapaData$DO_mgl,rep('Trapa',nrow(trapaData)))
plotDF = rbind(plotDF,SAVdata$DateTimeStamp,SAVdata$DO_mgl,rep('SAV',nrow(SAVdata)))
View(plotDF)
q=data.frame(SAVdata$DateTimeStamp,SAVdata$DO_mgl,rep('SAV',nrow(SAVdata)))
plotDF = rbind(plotDF,q)
View(plotDF)
library(dplyr)
plotDF = data.frame(trapaData$Datetime,trapaData$DO_mgl,rep('Trapa',nrow(trapaData)))
plotDF = rbind(plotDF,SAVdata$DateTimeStamp,SAVdata$DO_mgl,rep('SAV',nrow(SAVdata)))
colnames(plotDF) = c('Date','DO','Site')
View(plotDF)
plotDF = data.frame(trapaData$Datetime,trapaData$DO_mgl,rep('Trapa',nrow(trapaData)))
colnames(plotDF) = c('Date','DO','Site')
plotDF2 = data.frame(SAVdata$DateTimeStamp,SAVdata$DO_mgl,rep('SAV',nrow(SAVdata)))
colnames(plotDF2) = c('Date','DO','Site')
plotDF = rbind(plotDF,plotDF2)
ggplot(SAVdata,aes(x=DateTimeStamp,y=DO_mgl))+
geom_point(color='blue2')+
geom_point(data=trapaData,x=trapaData$Datetime,y=trapaData$DO_mgl,color='chartreuse3')+
coord_cartesian(ylim=c(min(c(SAVdata$DO_mgl,trapaData$DO_mgl),na.rm=TRUE),
max(c(SAVdata$DO_mgl,SAVdata$DO_mgl),na.rm=TRUE)),
xlim=c(dateRange[1],dateRange[2]))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
guides(color=legend)
ggplot(plotDF,aes(x=Date,y=DO))+
geom_point()
ggplot(plotDF,aes(x=Date,y=DO))+
geom_point(aes(colour=Site))
ggplot(plotDF,aes(x=Date,y=DO))+
geom_point(aes(colour=Site),colour=c('blue2','chartreuse3'))
ggplot(plotDF,aes(x=Date,y=DO))+
geom_point(aes(colour=Site))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
guides(color=legend)
ggplot(plotDF,aes(x=Date,y=DO))+
geom_point(aes(colour=Site))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]))
ggplot(plotDF,aes(x=Date,y=DO))+
geom_point(aes(colour=Site))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]))+
xlab("")
ggplot(plotDF,aes(x=Date,y=DO))+
geom_point(aes(colour=Site))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.8, 0.2))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.8))
# Plot
minDO = min(plotDF$DO[plotDF$Date<=dateRange[1] & plotDF$Date>=dateRange[2]])
plotDF$DO[plotDF$Date<=dateRange[1] & plotDF$Date>=dateRange[2]]
# Plot
minDO = min(plotDF$DO[plotDF$Date>=dateRange[1] & plotDF$Date<=dateRange[2]])
maxDO = max(plotDF$DO[plotDF$Date>=dateRange[1] & plotDF$Date<=dateRange[2]])
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.2))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.8))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.8))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.95, 0.8))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.85))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.85))
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot()
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)
ggplot(plotDF,aes(x=Site,y=DO,colour=SITE))+
geom_boxplot(notch=TRUE)
ggplot(plotDF,aes(x=Site,y=DO,colour=Site))+
geom_boxplot(notch=TRUE)
ggplot(plotDF,aes(x=Site,y=DO,colour=Site))+
geom_boxplot(notch=TRUE)+
scale_color_manual(values=c('blue2','chartreuse3'))
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
scale_color_manual(values=c('blue2'))
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
theme_minimal()
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
theme_classic()
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
theme_classic()+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.85))
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
theme_classic()+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")
theme_classic()+
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
# theme_classic()+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")
boxplot(DO~Site,data=plotDF)
boxplot(DO~Site,data=plotDF,notch=TRUE)
plotDF = data.frame(trapaData$Datetime,trapaData$DO_mgl,rep('Chestnut',nrow(trapaData)))
colnames(plotDF) = c('Date','DO','Site')
plotDF2 = data.frame(SAVdata$DateTimeStamp,SAVdata$DO_mgl,rep('SAV1',nrow(SAVdata)))
colnames(plotDF2) = c('Date','DO','Site')
plotDF = rbind(plotDF,plotDF2)
# Plot
minDO = min(plotDF$DO[plotDF$Date>=dateRange[1] & plotDF$Date<=dateRange[2]])
maxDO = max(plotDF$DO[plotDF$Date>=dateRange[1] & plotDF$Date<=dateRange[2]])
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.85))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.85))+
guides(fill = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(plot.title=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.title.x=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.title.y=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.title.y=element_text(size=14),
axis.text.y=element_text(size=14),
axis.text.x=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.text=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.title.y=element_text(size=14),
axis.text=element_text(size=14),
legend.text=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.title.y=element_text(size=14),
axis.text=element_text(size=14),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
source("~/GitHub/HudsonProject/wrangleDOdata.R")
debugSource("~/GitHub/HudsonProject/wrangleDOdata.R")
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.title.y=element_text(size=14),
axis.text=element_text(size=14),
legend.title=element_text(size=14),
legend.text=element_text(size=14),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Date,y=DO,colour=Site))+
geom_point()+
scale_color_manual(values=c('blue2','chartreuse3'))+
coord_cartesian(xlim=c(dateRange[1],dateRange[2]),
ylim=c(minDO,maxDO*1.1))+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")+
theme(axis.title.y=element_text(size=16),
axis.text=element_text(size=16),
legend.title=element_text(size=16),
legend.text=element_text(size=16),
legend.position = c(0.9, 0.85))+
guides(color = guide_legend(reverse=TRUE))
ggplot(plotDF,aes(x=Site,y=DO))+
geom_boxplot(notch=TRUE)+
xlab("")+
ylab("Dissolved Oxygen (mg/l)")
library(dplyr)
plotDF %>% group_by(Site) %>% summarize(med=median(DO))
View(plotDF)
plotDF %>% group_by(Site) %>% summarize(med=median(DO,na.rm=TRUE))
10-3.77
source("~/GitHub/Maryland/detPerfEval.R")
debugSource("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
cd()
setwd("~/GitHub/HudsonProject")
debugSource("~/GitHub/Maryland/detPerfEval.R")
View(detections)
detCol
detections$Tags = detections[[,detCol]]
detections$Tags = detections[[detCol]]
View(detections)
View(detections)
detections$Tags = detections[,[detCol]]
detections$Tags = detections[[,detCol]]
detections$Tags = detections[[detCol]]
detections$Tags
detections[[detCol]]
detCol = "SpeciesCode" # name of column containing detection labels
detections$Tags = detections[[detCol]]
View(detections)
debugSource("~/GitHub/Maryland/detPerfEval.R")
detections[[detCol]]
library(dplyr)
detections[[detCol]]
detCol
View(detections)
detCol = "Species.Code" # name of column containing detection labels
noCallInd = str_which(detections[[detCol]],'nocall')
detections[[detCol]]
source("~/GitHub/Maryland/detPerfEval.R")
debugSource("~/GitHub/Maryland/detPerfEval.R")
View(annotations)
("DeltacTime (s)" %in% colnames(annotations))
View(annotations)
("Delta Time (s)" %in% colnames(annotations))
annotations$"Delta Time (s)" = annotations$End.Time..s. - annotations$Begin.Time..s.
annotations$"Delta Time (s)" = annotations$"End Time (s)" - annotations$"Begin Time (s)"
View(annotations)
debugSource("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
source("~/GitHub/Maryland/detPerfEval.R")
debugSource("~/GitHub/Maryland/detPerfEval.R")
debugSource("~/GitHub/Maryland/detPerfEval.R")
n
debugSource("~/GitHub/Maryland/detPerfEval.R")
View(allData)
debugSource("~/GitHub/Maryland/detPerfEval.R")
cd()
